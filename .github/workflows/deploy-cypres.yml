name: ci

on:
  schedule:
      - cron: '*/5 * * * *'
  #push:
  #  branches:
  #    - main
  #pull_request:
jobs:
  ci:
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false # https://github.com/cypress-io/github-action/issues/48
      matrix:
        containers: [ 0, 1, 2 ]
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@main

      - name: Setup node env 🏗
        uses: actions/setup-node@master
        with:
          node-version: 16
          check-latest: true
          cache: 'npm'

      - name: Install dependencies 👨🏻‍💻
        run: npm ci
      - name: Install dependencies 👨🏻‍💻
        run: |
            echo "Running Nightly Job... "
            echo "-------------------------------"
            node -v
            npm -v
            ls -la
            pwd
            echo "-------------------------------"
            npx cypress run --spec ./cypress/integration/tests/test_cases/core/TCP42076.spec.js
      #- name: Run linter 👀
      #  run: npm run lint

      #- name: Run tests 🧪
      #  run: npm run test-unit

      #- name: Cypress run
      #  uses: cypress-io/github-action@v5
      #  with:
      #    install: false
      #    start: npx cypress run
      #    #wait-on: http://localhost:8080/
      #    config-file: cypress.json
      #    spec: "cypress/integration/tests/test_cases/core/TCP42076.spec.js"
      #    record: true
      #    parallel: true
      #  env:
      #    # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
      #    # in GitHub repo → Settings → Secrets → Actions
      #    CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      #    # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
      #    GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      #- name: Upload Cypress Screenshots
      #  uses: actions/upload-artifact@v3
      #  # Only capture images on failure
      #  if: failure()
      #  with:
      #    name: cypress-screenshots
      #    path: tests/e2e/screenshots
#
      #- name: Upload Cypress Videos
      #  uses: actions/upload-artifact@v3
      #  # Only capture videos on failure
      #  if: failure()
      #  with:
      #    name: cypress-videos
      #    path: tests/e2e/videos
#
      #- name: Run Coverage
      #  run: npx nyc report --reporter html --reporter text --reporter json-summary --report-dir combined-coverage
#
      #- name: Store Artifacts
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: code-coverage-report
      #    path: combined-coverage
#
      #- name: Run build bundle 📦
      #  run: npm run build-bundle